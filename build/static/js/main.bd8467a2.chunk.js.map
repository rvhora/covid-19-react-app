{"version":3,"sources":["components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Cards/Card/Card.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","JSON","stringify","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bd8467a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n    <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                {cardTitle}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n                {cardSubtitle}\r\n            </Typography>\r\n        </CardContent>\r\n    </Grid>\r\n);\r\n\r\nexport default CardComponent;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <CardComponent\r\n                    className={styles.infected}\r\n                    cardTitle=\"Infected\"\r\n                    value={confirmed.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of active cases from COVID-19.\"\r\n                />\r\n                <CardComponent\r\n                    className={styles.recovered}\r\n                    cardTitle=\"Recovered\"\r\n                    value={recovered.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n                />\r\n                <CardComponent\r\n                    className={styles.deaths}\r\n                    cardTitle=\"Deaths\"\r\n                    value={deaths.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n                />\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        console.log(JSON.stringify(modifiedData))\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\n\r\nconst Charts = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (<Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map((data) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map((data) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                },\r\n                ],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` }\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Cards, Charts, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api/';\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country })\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n\r\n\r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Charts data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__joN_r\",\"infected\":\"Cards_infected__34G1P\",\"recovered\":\"Cards_recovered__pF7i0\",\"deaths\":\"Cards_deaths__3idFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2_gcn\",\"image\":\"App_image__1NT3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3dNlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__CDHNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2bSzc\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}